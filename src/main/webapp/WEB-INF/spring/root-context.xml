<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- for oracle -->
	<!-- dataSource : 데이터 베이스 관련 정보 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521/xe" />
		<property name="username" value="jspexam" />
		<property name="password" value="java" />
	</bean>		
	
	<!-- sqlSessionFactory : 테이터 베이스와 연결을 맺고 끊을 때까지의 라이프 사이클 관리하는 sqlSession 객체를 만듦 -->
	<!-- dataSource를 받아서 sqlSession을 생성함 -->
	<!-- /sqlmap/**/*.xml : 쿼리가 들어갈 xml의 위치. 
		src/main/resources/sqlmap/서비스별폴더/*.xml을 매퍼 파일로 사용한다고 스프링에게 알림  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/sqlmap/**/*.xml" />
	</bean>
	
	<!-- sqlSessionTemplate : 데이터베이스에 개별적으로 쿼리를 실행시키는 객체
		 이 객체를 소스코드에서 사용해서 쿼리를 실행함.
		 - sqlSessionTemplate는 sqlSessionFactory 객체를 생성자로 받음 -> Factory를 통해 DB와 연결
		 - sqlSessionTemplate 객체는 sqlSession 객체가 가진 데이터베이스 접속 정보와
		       매퍼 파일의 위치를 알 수 있게 됨. -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
</beans>
